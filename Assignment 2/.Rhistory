knitr::opts_chunk$set(echo = TRUE)
#install.packages("readxl")
#install.packages("Rcmdr")
lines(density(profits), col = 2, lwd = 2)
profits <- as.numeric(dataframe[,2]) #extract column 2 as numeric values
knitr::opts_chunk$set(echo = TRUE)
#library(readxl)
#read in teh data using read.table, delimited by whitespace, filling blank values
data <- read.table("C:/Users/criss/Desktop/STAT414/Assignments/9-21/DownloadFestival.dat",
header = TRUE, sep = "", stringsAsFactors = FALSE, fill=TRUE)
#data
#max(data$day1)
max(data$day2,na.rm = TRUE)
max(data$day3,na.rm = TRUE)
sd(data$day1,na.rm = TRUE)
sd(data$day2,na.rm = TRUE)
sd(data$day3,na.rm = TRUE)
hist(data$day1,probability=TRUE,xlim = c(0, 4),breaks= c(0,0.5,1,1.5,2,2.5,3,3.5,4,4.5,22))
hist(data$day2,probability=TRUE,breaks= c(0,0.5,1,1.5,2,2.5,3,3.5,4))
hist(data$day3,probability=TRUE,breaks= c(0,0.3,1,1.5,2,2.5,3,3.5,4))
lines(density(data$day1), col = 2, lwd = 2)
curve(dnorm(x, mean=mean(data$day1), sd=sd(data$day1)), lwd=2, col="blue", add=TRUE)
#===================== QUESTION #1: =====================#
library(readxl)
#library(Rcmdr)
data <- read_excel("Profit.xlsx") #import excel data
dataframe <- data.frame(data) #convert excel sheet to dataframe
dataframe
profits <- as.numeric(dataframe[,2]) #extract column 2 as numeric values
max(profits)
min(profits)
profits
#Histogram of column 2 profits
hist(profits,probability=TRUE,breaks= c(100,500,600,700,800,900,1000,
1100,1200,1300,1400,1500,1600,1700,1800))
#Superimpose normal line onto histogram
lines(density(profits), col = 2, lwd = 2)
curve(dnorm(x, mean=mean(profits), sd=sd(profits)), lwd=2, col="blue", add=TRUE)
#Plot population vs profits in a scatterplot
population <- as.numeric(dataframe[,3]) #extract column 3 as numeric
population
plot(population, profits, main="scatter plot of profit vs population")
#Summary of data
SUM <- summary(dataframe)
SUM
#T-test
T1 <- t.test(profits, alternative="greater", mu=900)
T1
#Correlation of profits and population
COR = cor(profits, population)
COR
#Simple linear regression
LM <- lm(profits~population)
LM
LM$effects
# if multivariables: LM <- lm(y~x1+x2)
#Comparing 2 populations using a boxplot
COMMIS <- as.numeric(dataframe[,6]) #extract column 6
boxplot(profits~COMMIS, xlab="COMMIS",ylab="PROFIT", boxwex=0.25,
main="Box Plot of Profit by COMMIS", col="lightblue")
#2 sample t-test
T2 = t.test(profits~COMMIS,alternative=c("less"))
T2
#library(readxl)
#read in teh data using read.table, delimited by whitespace, filling blank values
data <- read.table("C:/Users/criss/Desktop/STAT414/Assignments/9-21/DownloadFestival.dat",
header = TRUE, sep = "", stringsAsFactors = FALSE, fill=TRUE)
#data
#max(data$day1)
max(data$day2,na.rm = TRUE)
max(data$day3,na.rm = TRUE)
sd(data$day1,na.rm = TRUE)
sd(data$day2,na.rm = TRUE)
sd(data$day3,na.rm = TRUE)
hist(data$day1,probability=TRUE,xlim = c(0, 4),breaks= c(0,0.5,1,1.5,2,2.5,3,3.5,4,4.5,22))
lines(density(data$day1), col = 2, lwd = 2)
curve(dnorm(x, mean=mean(data$day1), sd=sd(data$day1)), lwd=2, col="blue", add=TRUE)
hist(data$day2,probability=TRUE,breaks= c(0,0.5,1,1.5,2,2.5,3,3.5,4))
lines(density(data$day2), col = 2, lwd = 2)
#library(readxl)
#read in teh data using read.table, delimited by whitespace, filling blank values
data <- read.table("C:/Users/criss/Desktop/STAT414/Assignments/9-21/DownloadFestival.dat",
header = TRUE, sep = "", stringsAsFactors = FALSE, fill=TRUE)
#data
#max(data$day1)
max(data$day2,na.rm = TRUE)
max(data$day3,na.rm = TRUE)
sd(data$day1,na.rm = TRUE)
sd(data$day2,na.rm = TRUE)
sd(data$day3,na.rm = TRUE)
hist(data$day1,probability=TRUE,xlim = c(0, 4),breaks= c(0,0.5,1,1.5,2,2.5,3,3.5,4,4.5,22))
lines(density(data$day1), col = 2, lwd = 2)
curve(dnorm(x, mean=mean(data$day1), sd=sd(data$day1)), lwd=2, col="blue", add=TRUE)
hist(data$day2,probability=TRUE,breaks= c(0,0.5,1,1.5,2,2.5,3,3.5,4))
lines(density(data$day2, na.rm = TRUE), col = 2, lwd = 2)
curve(dnorm(x, mean=mean(data$day2), sd=sd(data$day2)), lwd=2, col="blue", add=TRUE)
hist(data$day3,probability=TRUE,breaks= c(0,0.3,1,1.5,2,2.5,3,3.5,4))
lines(density(data$day3, na.rm = TRUE), col = 2, lwd = 2)
curve(dnorm(x, mean=mean(data$day3), sd=sd(data$day3)), lwd=2, col="blue", add=TRUE)
curve(dnorm(x, mean=mean(data$day2), sd=sd(data$day2)), lwd=2, col="blue", add=TRUE)
hist(data$day2,probability=TRUE,breaks= c(0,0.5,1,1.5,2,2.5,3,3.5,4))
lines(density(data$day2, na.rm = TRUE), col = 2, lwd = 2)
curve(dnorm(x, mean=mean(data$day2), sd=sd(data$day2)), lwd=2, col="blue", add=TRUE)
#library(readxl)
#read in teh data using read.table, delimited by whitespace, filling blank values
data <- read.table("C:/Users/criss/Desktop/STAT414/Assignments/9-21/DownloadFestival.dat",
header = TRUE, sep = "", stringsAsFactors = FALSE, fill=TRUE)
#data
#max(data$day1)
max(data$day2,na.rm = TRUE)
max(data$day3,na.rm = TRUE)
sd(data$day1,na.rm = TRUE)
sd(data$day2,na.rm = TRUE)
sd(data$day3,na.rm = TRUE)
hist(data$day1,probability=TRUE,xlim = c(0, 4),breaks= c(0,0.5,1,1.5,2,2.5,3,3.5,4,4.5,22))
lines(density(data$day1), col = 2, lwd = 2)
curve(dnorm(x, mean=mean(data$day1), sd=sd(data$day1)), lwd=2, col="blue", add=TRUE)
hist(data$day2,probability=TRUE,breaks= c(0,0.5,1,1.5,2,2.5,3,3.5,4))
lines(density(data$day2, na.rm = TRUE), col = 2, lwd = 2)
curve(dnorm(x, mean=mean(data$day2), sd=sd(data$day2)), lwd=2, col="blue", add=TRUE)
hist(data$day3,probability=TRUE,breaks= c(0,0.3,1,1.5,2,2.5,3,3.5,4))
lines(density(data$day3, na.rm = TRUE), col = 2, lwd = 2)
curve(dnorm(x, mean=mean(data$day3), sd=sd(data$day3)), lwd=2, col="blue", add=TRUE)
#library(readxl)
#read in teh data using read.table, delimited by whitespace, filling blank values
data <- read.table("C:/Users/criss/Desktop/STAT414/Assignments/9-21/DownloadFestival.dat",
header = TRUE, sep = "", stringsAsFactors = FALSE, fill=TRUE)
#data
#max(data$day1)
max(data$day2,na.rm = TRUE)
max(data$day3,na.rm = TRUE)
sd(data$day1,na.rm = TRUE)
sd(data$day2,na.rm = TRUE)
sd(data$day3,na.rm = TRUE)
data$day2
data$day3
hist(data$day1,probability=TRUE,xlim = c(0, 4),breaks= c(0,0.5,1,1.5,2,2.5,3,3.5,4,4.5,22))
lines(density(data$day1), col = 2, lwd = 2)
curve(dnorm(x, mean=mean(data$day1), sd=sd(data$day1)), lwd=2, col="blue", add=TRUE)
hist(data$day2,probability=TRUE,breaks= c(0,0.5,1,1.5,2,2.5,3,3.5,4))
lines(density(data$day2, na.rm = TRUE), col = 2, lwd = 2)
curve(dnorm(x, mean=mean(data$day2), sd=sd(data$day2)), lwd=2, col="blue", add=TRUE)
hist(data$day3,probability=TRUE,breaks= c(0,0.3,1,1.5,2,2.5,3,3.5,4))
lines(density(data$day3, na.rm = TRUE), col = 2, lwd = 2)
curve(dnorm(x, mean=mean(data$day3), sd=sd(data$day3)), lwd=2, col="blue", add=TRUE)
#library(readxl)
#read in teh data using read.table, delimited by whitespace, filling blank values
data <- read.table("C:/Users/criss/Desktop/STAT414/Assignments/9-21/DownloadFestival.dat",
header = TRUE, sep = "", stringsAsFactors = FALSE, fill=TRUE)
#data
#max(data$day1)
max(data$day2,na.rm = TRUE)
max(data$day3,na.rm = TRUE)
sd(data$day1,na.rm = TRUE)
day2_sd <- sd(data$day2,na.rm = TRUE)
day3_sd <- sd(data$day3,na.rm = TRUE)
day2_mean <- mean(data$day2, na.rm = TRUE)
day3_mean <- mean(data$day3, na.rm = TRUE)
data$day2
data$day3
hist(data$day1,probability=TRUE,xlim = c(0, 4),breaks= c(0,0.5,1,1.5,2,2.5,3,3.5,4,4.5,22))
lines(density(data$day1), col = 2, lwd = 2)
curve(dnorm(x, mean=mean(data$day1), sd=sd(data$day1)), lwd=2, col="blue", add=TRUE)
hist(data$day2,probability=TRUE,breaks= c(0,0.5,1,1.5,2,2.5,3,3.5,4))
lines(density(data$day2, na.rm = TRUE), col = 2, lwd = 2)
curve(dnorm(x, mean=day2_mean, sd=day2_sd), lwd=2, col="blue", add=TRUE)
hist(data$day3,probability=TRUE,breaks= c(0,0.3,1,1.5,2,2.5,3,3.5,4))
lines(density(data$day3, na.rm = TRUE), col = 2, lwd = 2)
curve(dnorm(x, mean=day3_mean, sd=day3_sd), lwd=2, col="blue", add=TRUE)
#library(readxl)
#read in teh data using read.table, delimited by whitespace, filling blank values
data <- read.table("C:/Users/criss/Desktop/STAT414/Assignments/9-21/DownloadFestival.dat",
header = TRUE, sep = "", stringsAsFactors = FALSE, fill=TRUE)
#data
#max(data$day1)
max(data$day2,na.rm = TRUE)
max(data$day3,na.rm = TRUE)
sd(data$day1,na.rm = TRUE)
day2_sd <- sd(data$day2,na.rm = TRUE)
day3_sd <- sd(data$day3,na.rm = TRUE)
hist(data$day1,probability=TRUE,xlim = c(0, 4),breaks= c(0,0.5,1,1.5,2,2.5,3,3.5,4,4.5,22))
lines(density(data$day1), col = 2, lwd = 2)
curve(dnorm(x, mean=mean(data$day1), sd=sd(data$day1)), lwd=2, col="blue", add=TRUE)
hist(data$day2,probability=TRUE,breaks= c(0,0.5,1,1.5,2,2.5,3,3.5,4))
lines(density(data$day2, na.rm = TRUE), col = 2, lwd = 2)
curve(dnorm(x, mean=mean(data$day2, na.rm = TRUE), sd=sd(data$day2,na.rm = TRUE)), lwd=2, col="blue", add=TRUE)
hist(data$day3,probability=TRUE,breaks= c(0,0.3,1,1.5,2,2.5,3,3.5,4))
lines(density(data$day3, na.rm = TRUE), col = 2, lwd = 2)
curve(dnorm(x, mean=mean(data$day3, na.rm = TRUE), sd=sd(data$day3,na.rm = TRUE)), lwd=2, col="blue", add=TRUE)
cat("The normal line is symmetric and matches the actual line representation of day 1 well, therefore we can say")
#library(readxl)
#read in teh data using read.table, delimited by whitespace, filling blank values
data <- read.table("C:/Users/criss/Desktop/STAT414/Assignments/9-21/DownloadFestival.dat",
header = TRUE, sep = "", stringsAsFactors = FALSE, fill=TRUE)
#data
#max(data$day1)
max(data$day2,na.rm = TRUE)
max(data$day3,na.rm = TRUE)
sd(data$day1,na.rm = TRUE)
day2_sd <- sd(data$day2,na.rm = TRUE)
day3_sd <- sd(data$day3,na.rm = TRUE)
#Generate histogram, histogram line, and superimpose normal line for day 1 data
hist(data$day1,probability=TRUE,xlim = c(0, 4),breaks= c(0,0.5,1,1.5,2,2.5,3,3.5,4,4.5,22))
lines(density(data$day1), col = 2, lwd = 2)
curve(dnorm(x, mean=mean(data$day1), sd=sd(data$day1)), lwd=2, col="blue", add=TRUE)
cat("The normal line is symmetric and matches the actual line representation of 'day 1' well, therefore we can say
that a Normal Distribution is appropriate for this dataset.")
#Generate histogram, histogram line, and superimpose normal line for day 2 data, remove any NA values
hist(data$day2,probability=TRUE,breaks= c(0,0.5,1,1.5,2,2.5,3,3.5,4))
lines(density(data$day2, na.rm = TRUE), col = 2, lwd = 2)
curve(dnorm(x, mean=mean(data$day2, na.rm = TRUE), sd=sd(data$day2,na.rm = TRUE)), lwd=2,
col="blue", add=TRUE)
cat("The normal line is heavily skewed with a and matches the actual line representation of 'day 1' well, therefore we can say
that a Normal Distribution is appropriate for this dataset.")
#Generate histogram, histogram line, and superimpose normal line for day 3 data, remove any NA values
hist(data$day3,probability=TRUE,breaks= c(0,0.3,1,1.5,2,2.5,3,3.5,4))
lines(density(data$day3, na.rm = TRUE), col = 2, lwd = 2)
curve(dnorm(x, mean=mean(data$day3, na.rm = TRUE), sd=sd(data$day3,na.rm = TRUE)), lwd=2,
col="blue", add=TRUE)
#library(readxl)
#read in teh data using read.table, delimited by whitespace, filling blank values
data <- read.table("C:/Users/criss/Desktop/STAT414/Assignments/9-21/DownloadFestival.dat",
header = TRUE, sep = "", stringsAsFactors = FALSE, fill=TRUE)
#data
#max(data$day1)
max(data$day2,na.rm = TRUE)
max(data$day3,na.rm = TRUE)
sd(data$day1,na.rm = TRUE)
day2_sd <- sd(data$day2,na.rm = TRUE)
day3_sd <- sd(data$day3,na.rm = TRUE)
#Generate histogram, histogram line, and superimpose normal line for day 1 data
hist(data$day1,probability=TRUE,xlim = c(0, 4),breaks= c(0,0.5,1,1.5,2,2.5,3,3.5,4,4.5,22))
lines(density(data$day1), col = 2, lwd = 2)
curve(dnorm(x, mean=mean(data$day1), sd=sd(data$day1)), lwd=2, col="blue", add=TRUE)
cat("The normal line is symmetric and matches the actual line representation of 'day 1' well, therefore we can say
that a Normal Distribution is appropriate for this dataset.")
#Generate histogram, histogram line, and superimpose normal line for day 2 data, remove any NA values
hist(data$day2,probability=TRUE,breaks= c(0,0.5,1,1.5,2,2.5,3,3.5,4))
lines(density(data$day2, na.rm = TRUE), col = 2, lwd = 2)
curve(dnorm(x, mean=mean(data$day2, na.rm = TRUE), sd=sd(data$day2,na.rm = TRUE)), lwd=2,
col="blue", add=TRUE)
cat("The normal line is heavily skewed with a right-skew and a long tail, the line is definitely not symmetric,
therefore we can say that a Normal Distribution is not appropriate for 'day 2'")
#Generate histogram, histogram line, and superimpose normal line for day 3 data, remove any NA values
hist(data$day3,probability=TRUE,breaks= c(0,0.3,1,1.5,2,2.5,3,3.5,4))
lines(density(data$day3, na.rm = TRUE), col = 2, lwd = 2)
curve(dnorm(x, mean=mean(data$day3, na.rm = TRUE), sd=sd(data$day3,na.rm = TRUE)), lwd=2,
col="blue", add=TRUE)
cat("The normal line is heavily skewed with a right-skew and a long tail, the line is definitely not symmetric,
therefore we can say that a Normal Distribution is not appropriate for 'day 3'")
